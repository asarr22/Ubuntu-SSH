name: Ubuntu-Server
on: 
  workflow_dispatch:
defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - uses: fastai/workflows/ssh@master
      with:
        ssh_key: ${{ secrets.SSH_KEY }}
        key_file: id_ecdsa

    - uses: actions/checkout@v2
    - run: source ubuntu-run.sh

    # Some special configs for me :D
    - name: Set GitHub configs
      run: |
        git config --global user.name "Batu33TR"
        git config --global user.email "batuhanarslanoglu4@gmail.com"
        git config --global color.ui true
        git config --global credential.helper store
        echo "https://Batu33TR:${{ secrets.GH_TOKEN }}@github.com" > ~/.git-credentials
        git config --global user.signingkey 396D10803E9FB832DF5B31A556008DEB21E2C8D3
        git config --global commit.gpgsign true

    - name: Configure GPG RSA key
      run: |
        cd /home/runner
        git clone https://github.com/Batu33TR/gnupg gpgkey
        gpg --import ~/gpgkey/gpgsecret.asc
        echo "export GPG_TTY=$(tty)" >> ~/.bash_profile
      # :D

    - name: Import SSH key
      run: |
        sudo apt install expect
        cd /home/runner
        cp gnupg/id_ed25519* .ssh/
        chmod 400 .ssh/id_ed25519*
        
    - name: Add in SSH-Agent
        eval $(ssh-agent -s)
        expect << EOF
          spawn ssh-add .ssh/id_ed25519
          expect "Enter passphrase"
          send "${{ secrets.SSH_KEY_PASS }}"
          send "\r"
          expect eof
        EOF
        
    - name: Connect Git by SSH
      run: |
        eval $(ssh-agent -s)
        expect << EOF
          spawn ssh -T git@github.com
          expect "Enter passphrase for key '/home/runner/.ssh/id_ed25519': "
          send "${{ secrets.SSH_KEY_PASS }}"
          send "\r"
          expect eof
        EOF

    - name: SSH Agent Keepalive  
      run: |
        cat << EOF > ~/.bashrc 
          env=~/.ssh/agent.env
          
          agent_load_env () { test -f "$env" && . "$env" >| /dev/null ; }
          
          agent_start () {
            (umask 077; ssh-agent >| "$env")
            . "$env" >| /dev/null ; }
            
          agent_load_env
          
          # agent_run_state: 0=agent running w/ key; 1=agent w/o key; 2= agent not running
          agent_run_state=$(ssh-add -l >| /dev/null 2>&1; echo $?)
          
          if [ ! "$SSH_AUTH_SOCK" ] || [ $agent_run_state = 2 ]; then
            agent_start
            ssh-add
          elif [ "$SSH_AUTH_SOCK" ] && [ $agent_run_state = 1 ]; then
            ssh-add
          fi
          
          unset env
          
          EOF
    
    - name: Enable byobu
      run: byobu-enable

    - name: Fix "Visual Studio Code is unable to watch for file changes in this large workspace"
      run: |
        sudo sh -c "echo 'fs.inotify.max_user_watches=524288' >> /etc/sysctl.conf"
        sudo sysctl -p

    - name: Start SSH via ngrok
      continue-on-error: true
      timeout-minutes: 350
      uses: P3TERX/ssh2actions@main
      with:
        mode: ngrok
      env:
        # You can find this token here: https://dashboard.ngrok.com/auth/your-authtoken
        NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
        # ngrok server region [us, eu, au, ap, sa, jp, in] (optional, default: us)
        NGROK_REGION: eu
        # This password you will use when authorizing via SSH
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
